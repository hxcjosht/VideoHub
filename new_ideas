


videohub=TcpSocket.New()
videohub.ReadTimeout = 0
videohub.WriteTimeout = 0
videohub.ReconnectTimeout = 1
ip="10.30.13.17"
port=9990




videohub.EventHandler = function(socket, evt, err)
  if evt == TcpSocket.Events.Connected then
    print( "Connection Made" )    
  elseif evt == TcpSocket.Events.Reconnect then 
    print( "reconnecting..." )  
  elseif evt == TcpSocket.Events.Data then
    message = videohub:Read(videohub.BufferLength)
    print(message)
  elseif evt == TcpSocket.Events.Closed then
    print( "connection was closed" )
  elseif evt == TcpSocket.Events.Error then
    print( "connection was closed due to error", err )
  elseif evt == TcpSocket.Events.Timeout then
    print( "connection timed out" )
  else
    print( "unknown socket event", evt ) -- should not occur
   return message 
  end
end


--Controls.Inputs[4].EventHandler= function ()

function get_info()
  message = TcpSocket.Events.Data
  input_labels = {}
  output_labels = {}

  -- Define a flag to keep track of whether we're in the input label section or output label section
  in_input_section = false
  in_output_section = false

  -- Loop through each line of the text
  for line in string.gmatch(message, "[^\n]+") do
    if string.match(line, "INPUT LABELS:") then
      in_input_section = true
    elseif string.match(line, "OUTPUT LABELS:") then
      in_input_section = false
      in_output_section = true
    elseif in_input_section then
      -- If we're in the input label section, extract the index and label from the line
      index, label = string.match(line, "(%d+)%s(.+)")
      if index and label then
        input_labels[tonumber(index) + 1] = label
      end
    elseif in_output_section then
      -- If we're in the output label section, extract the index and label from the line
      index, label = string.match(line, "(%d+)%s(.+)")
      if index and label then
        output_labels[tonumber(index) + 1] = label
      end
    end
  end
end  

Controls.Inputs[1].Choices= input_labels
Controls.Inputs[2].Choices= output_labels







videohub:Connect(ip,port)
