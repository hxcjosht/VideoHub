model = 40


output_labels = {}
input_labels = {}
-- Connect to the Videohub
videohub = TcpSocket.New()
videohub.ReadTimeout = 0
videohub.WriteTimeout = 0
videohub.ReconnectTimeout = 1
ip = "10.30.13.17"
port = 9990


videohub.EventHandler = function(socket, evt, err)
  if evt == TcpSocket.Events.Connected then
    print( "Connection Made" )
       
    --videohub:Read(videohub.BufferLength)
  elseif evt == TcpSocket.Events.Reconnect then 
    print( "reconnecting..." )  
  elseif evt == TcpSocket.Events.Data then
    --print(videohub:Read(videohub.BufferLength))
  elseif evt == TcpSocket.Events.Closed then
    print( "connection was closed" )
  elseif evt == TcpSocket.Events.Error then
    print( "connection was closed due to error", err )
  elseif evt == TcpSocket.Events.Timeout then
    print( "connection timed out" )
  else
    print( "unknown socket event", evt ) -- should not occur 
  end
end

Controls.update.EventHandler = function ()
  outlabelupdate()

end 

function outlabelupdate()
  local count = 0 
  videohub:Write("OUTPUT LABELS:\n\n")
  local response = videohub:Read(videohub.BufferLength)
   if string.find(response, "ACK") then
    for line in string.gmatch(response, "[^\n]+") do 
      index, label = string.match(line, "(%d+)%s(.+)")
        if index and label then 
          output_labels[tonumber(index) + 1] = label
          count = count +1
        end 
      if count >= model then break end 
    end 
   end 
  print(response)
  Controls.output.Choices = output_labels
end

function inlabelupdate()
  local count = 0 
  videohub:Write("INPUT LABELS:\n\n")
  local response = videohub:Read(videohub.BufferLength)
   if string.find(response, "ACK") then
    for line in string.gmatch(response, "[^\n]+") do 
      index, label = string.match(line, "(%d+)%s(.+)")
        if index and label then 
          input_labels[tonumber(index) + 1] = label
          count = count +1
        end 
      if count >= model then break end 
    end 
   end 
  print(response)
  Controls.input.Choices = input_labels
end

videohub:Connect(ip,port)
